{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"-IZiGjgg-Zbv","executionInfo":{"status":"ok","timestamp":1706079732768,"user_tz":-480,"elapsed":11865,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"outputs":[],"source":["import re\n","import numpy as np\n","import pandas as pd\n","import torch\n","import tensorflow as tf\n","from tqdm import tqdm\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\n","from sklearn.preprocessing import LabelEncoder\n","from torch.nn import functional as F\n","from torch.utils.data import DataLoader, Dataset\n","from transformers import (\n","    BertTokenizer, BertModel, GPT2Tokenizer, GPT2Model, AutoModel, AutoTokenizer, AutoModelForMaskedLM,\n","    TFBertModel\n",")\n","from keras.utils import to_categorical\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.layers import Embedding, SimpleRNN, Bidirectional, Dense, GRU, LSTM\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.callbacks import EarlyStopping\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import  f1_score, recall_score\n","\n","\n"]},{"cell_type":"markdown","source":["# Data Loading and Cleaning"],"metadata":{"id":"2wxHNO3W_oe6"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"gSIxFq4P-Zby","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079842086,"user_tz":-480,"elapsed":109323,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"8267b3fe-3784-402a-a97d-f453a33fa175"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["# reading Data from file\n","from google.colab import drive\n","drive.mount('/content/drive/')\n","# reading Data from file\n","df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Books_rating.csv')\n","\n","# convert 'review/helpfulness' column to numeric and remove rows where the value is less than 0.5\n","# remain the helpful reviews\n","df[['numerator', 'denominator']] = df['review/helpfulness'].str.split('/', expand=True)\n","df['numerator'] = pd.to_numeric(df['numerator'], errors='coerce')\n","df['denominator'] = pd.to_numeric(df['denominator'], errors='coerce')\n","df['review/helpfulness'] = df['numerator'] / df['denominator']\n","df = df.drop(['numerator', 'denominator'], axis=1)\n","df = df[df['review/helpfulness'] >= 0.5]\n","# drop null values\n","df = df[['review/score','review/text']]\n","df.dropna(inplace = True)\n","# rename the column for better readability\n","df = df.rename(columns={'review/score': 'score', 'review/text': 'text'})"]},{"cell_type":"markdown","source":["# Data Transformation\n"],"metadata":{"id":"YIorUdmuAN9i"}},{"cell_type":"code","source":["\n","# Set scores 1-2 as negative, 3 as neutral, and 4-5 as positive; then visualize the histogram of the data\n","# Define a function to map scores to sentiment labels\n","def map_score_to_sentiment(score):\n","    if score <= 2:\n","        return 'negative'\n","    elif score == 3:\n","        return 'neutral'\n","    else:\n","        return 'positive'\n","\n","# Map sentiment labels\n","df['sentiment'] = df['score'].apply(map_score_to_sentiment)\n","\n","\n","\n"],"metadata":{"id":"OB-snIuqAWjN","executionInfo":{"status":"ok","timestamp":1706079842578,"user_tz":-480,"elapsed":497,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head(10)"],"metadata":{"id":"jYPZK8b-XgKc","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1706079842578,"user_tz":-480,"elapsed":7,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"4ff4b118-f81c-4236-c2c4-c0e84ef9f088"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    score                                               text sentiment\n","0     4.0  This is only for Julie Strain fans. It's a col...  positive\n","1     5.0  I don't care much for Dr. Seuss but after read...  positive\n","2     5.0  If people become the books they read and if \"t...  positive\n","3     4.0  Theodore Seuss Geisel (1904-1991), aka &quot;D...  positive\n","4     4.0  Philip Nel - Dr. Seuss: American IconThis is b...  positive\n","5     4.0  \"Dr. Seuss: American Icon\" by Philip Nel is a ...  positive\n","6     5.0  Theodor Seuss Giesel was best known as 'Dr. Se...  positive\n","9     4.0  As far as I am aware, this is the first book-l...  positive\n","10    5.0  I just finished the book, &quot;Wonderful Wors...  positive\n","11    5.0  Many small churches feel like they can not hav...  positive"],"text/html":["\n","  <div id=\"df-0c481451-b639-4c82-96d3-34964d7f7269\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>text</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4.0</td>\n","      <td>This is only for Julie Strain fans. It's a col...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.0</td>\n","      <td>I don't care much for Dr. Seuss but after read...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5.0</td>\n","      <td>If people become the books they read and if \"t...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>Theodore Seuss Geisel (1904-1991), aka &amp;quot;D...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4.0</td>\n","      <td>Philip Nel - Dr. Seuss: American IconThis is b...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4.0</td>\n","      <td>\"Dr. Seuss: American Icon\" by Philip Nel is a ...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5.0</td>\n","      <td>Theodor Seuss Giesel was best known as 'Dr. Se...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>4.0</td>\n","      <td>As far as I am aware, this is the first book-l...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>5.0</td>\n","      <td>I just finished the book, &amp;quot;Wonderful Wors...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5.0</td>\n","      <td>Many small churches feel like they can not hav...</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c481451-b639-4c82-96d3-34964d7f7269')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c481451-b639-4c82-96d3-34964d7f7269 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c481451-b639-4c82-96d3-34964d7f7269');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ec4c5b1f-a2ca-412f-8dbf-01f6dfb300d7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ec4c5b1f-a2ca-412f-8dbf-01f6dfb300d7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ec4c5b1f-a2ca-412f-8dbf-01f6dfb300d7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["\n","# Define LabelEncoder\n","label_encoder = LabelEncoder()\n","\n","# Encode sentiment labels as integers\n","df['label'] = label_encoder.fit_transform(df['sentiment'])"],"metadata":{"id":"I0-t6wJmXxg4","executionInfo":{"status":"ok","timestamp":1706079842578,"user_tz":-480,"elapsed":4,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df['label'] = pd.to_numeric(df['label'], downcast='integer')\n","samples_per_category = 1000\n","df = df.groupby('label').apply(lambda x: x.sample(n=samples_per_category, random_state=1)).reset_index(drop=True)\n","df = df.sample(frac=1, random_state=2).reset_index(drop=True)\n"],"metadata":{"id":"JGvdL0ADXehD","executionInfo":{"status":"ok","timestamp":1706079843006,"user_tz":-480,"elapsed":432,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["\n","# Visualize the distribution histogram of sentiment labels in the dataset\n","sns.countplot(x='sentiment', data=df)\n","plt.title('Distribution of Sentiments')\n","plt.show()\n","\n"],"metadata":{"id":"FXUFfc8pXa1Y","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1706079843833,"user_tz":-480,"elapsed":830,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"77fa5823-03f4-47ef-8cb0-408361f08c40"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.shape"],"metadata":{"id":"1uZNIZ42YbdK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079843833,"user_tz":-480,"elapsed":9,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"d4789712-6059-46ec-a45a-32e817362753"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3000, 4)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.head(10)"],"metadata":{"id":"KnFlHkWCAmMu","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1706079843833,"user_tz":-480,"elapsed":7,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"9e3fbbac-25e2-44fd-8bb7-a3520ade99c0"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score                                               text sentiment  label\n","0    3.0  I very much looked forward to this book and re...   neutral      1\n","1    1.0  If this ghastly pastiche (or perhaps unintenti...  negative      0\n","2    1.0  First off, let me say that I *like* sentimenta...  negative      0\n","3    5.0  this book was great, but i never actually read...  positive      2\n","4    3.0  To bring Alexis de Tocqueville's concerns (esp...   neutral      1\n","5    3.0  This little book (almost 100 pages) was first ...   neutral      1\n","6    4.0  While everybody rates this book very highly (a...  positive      2\n","7    2.0  This is not a review of the content of the boo...  negative      0\n","8    1.0  I am extremely disappointed in the print quali...  negative      0\n","9    5.0  The words often found between the torn and tat...  positive      2"],"text/html":["\n","  <div id=\"df-acec2a91-4aac-4a04-ad83-786aab0fa181\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>text</th>\n","      <th>sentiment</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.0</td>\n","      <td>I very much looked forward to this book and re...</td>\n","      <td>neutral</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>If this ghastly pastiche (or perhaps unintenti...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>First off, let me say that I *like* sentimenta...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.0</td>\n","      <td>this book was great, but i never actually read...</td>\n","      <td>positive</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.0</td>\n","      <td>To bring Alexis de Tocqueville's concerns (esp...</td>\n","      <td>neutral</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3.0</td>\n","      <td>This little book (almost 100 pages) was first ...</td>\n","      <td>neutral</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>4.0</td>\n","      <td>While everybody rates this book very highly (a...</td>\n","      <td>positive</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.0</td>\n","      <td>This is not a review of the content of the boo...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1.0</td>\n","      <td>I am extremely disappointed in the print quali...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>5.0</td>\n","      <td>The words often found between the torn and tat...</td>\n","      <td>positive</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-acec2a91-4aac-4a04-ad83-786aab0fa181')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-acec2a91-4aac-4a04-ad83-786aab0fa181 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-acec2a91-4aac-4a04-ad83-786aab0fa181');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff847990-552d-4874-8d2e-65de34b1a74b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff847990-552d-4874-8d2e-65de34b1a74b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff847990-552d-4874-8d2e-65de34b1a74b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# Assuming df is your DataFrame and 'score' is the column containing class labels\n","labels = LabelEncoder().fit(df['label']).transform(df['label'])\n","num_classes = 3\n","\n","# Convert labels to one-hot encoding\n","labels = to_categorical(labels, num_classes=num_classes)\n"],"metadata":{"id":"_Z3uO_b7AwJW","executionInfo":{"status":"ok","timestamp":1706079843834,"user_tz":-480,"elapsed":7,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# Load BERT tokenizer and model\n","tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","bert_model = TFBertModel.from_pretrained('bert-base-uncased', trainable=True)\n","# Tokenize input text\n","encoded_data = tokenizer(list(df['text']), padding=True, truncation=True, return_tensors='tf')"],"metadata":{"id":"rnBeNLvlCDuq","colab":{"base_uri":"https://localhost:8080/","height":393,"referenced_widgets":["ff7ad76c17fd43e6ad20e6d3cd1f7333","a91baf68a26b4a1b84e5cb0d157993d7","0986463ffb114bbf99ab78f0106ace95","b327f1b15c5241f5b00a5963b165369c","624079f3ae6347bcbfaa7e568e10976a","0abf6ba8d2c24208a8a0493c6150d0ce","4d0f29eb42094080a1a886c31f92d504","195815f3267345948cc292f834ca7273","194aebaa0e4347c19ca6c9de4e9d83df","dfc41185199d401ea05bea442e648e85","6f3fac1fc6b04fcc9cb2e8bb842c17f1","e3e3929ddc1648248b8a008ca0f8fd8e","59290834ffd8444c9fffdca193d84d4a","ef9e7c03bd124e8a95774037b447d529","d0c1b6beafdd4782a8baf6567f35d39f","15043098d4854629b7c11621d0f822f1","157022e78e19425f8c1e327ecb1b571c","331cbf7833b24a67a29811f19f8f374b","9180e8ffbc9f49af91bbbe3500dfdd6c","38c92d31c69c418c9b19dfeda10fa9f2","c6d0301bfbe7416e9c6547d0a3d5ab0c","21aa07e6c0004569847f9bded6eb94bf","1f202b5524a54dcf9ce29b9d4e728ab4","608672d02cc744ec802b302426e7e13b","7741c6c1e34d408fb9bba8d49135b0fc","e367d40071b64a1b97e55b6d869debb1","6f1d0850f6bf4a1389e2277c059724db","ba55aab57a2443ee9bbb0ca57be425dd","8573143b9ecf4a4981580d7b99e5bb3c","265e9317dcff4e75b8f4c97b1f644420","531438073bcf4cbf97353919d369582b","a0ea787435164194bb9c30340d48a391","b57c48b3281742009f86761cba14d6e3","77b954cbd9734b838ffa6b1cc86b83be","85d904209c0c407ba6f517209ef143ac","19a0af6acf204f00a0270d1cab238762","fb82c40c4a2f41a6823427f0e4cb5fd5","2deda2c9283f4fb482496b8a6741c29c","bcf8e019b96740c29cd8d0b8f9e7ce1e","2925fef93ce54ed0a78843edb71ab9b2","f6098998d1234b3b9f15a3e08cfb7b3d","38cdbbf84fb44ecb9dad7947ea574336","724cb9d53e7a4662b8b9cdd2fda686b7","1f7d2ff739744726bfa985081c240e47","83096d936f894bea99e2ecfae50e711f","9e2407a7d56e4f8e98bdbcc08721aa5c","f0cd8dc5d1ab4452bb060be4fd4fd0f5","63c2232f3f01460bb7cfc944672beae8","44a575cde7d14e3d8af353b61d8a6578","a7c9c68fbd7a4a75b93fa21356734673","b2f766cd12524648acc3db498bcbbc95","177ac8e9906341dd87f112410c9ee225","20b7335bd2664d2292cff3f150e4592c","8bf122c802cf49e4a6b621922fb0ef24","21925c9fa65f471d9566cbf24cf81aed"]},"executionInfo":{"status":"ok","timestamp":1706079867189,"user_tz":-480,"elapsed":23362,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"936a2448-2212-4832-83c3-75f016e50d74"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ff7ad76c17fd43e6ad20e6d3cd1f7333"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e3e3929ddc1648248b8a008ca0f8fd8e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1f202b5524a54dcf9ce29b9d4e728ab4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"77b954cbd9734b838ffa6b1cc86b83be"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"83096d936f894bea99e2ecfae50e711f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFBertModel: ['cls.predictions.transform.dense.weight', 'cls.predictions.bias', 'cls.seq_relationship.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.seq_relationship.weight']\n","- This IS expected if you are initializing TFBertModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFBertModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","All the weights of TFBertModel were initialized from the PyTorch model.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertModel for predictions without further training.\n"]}]},{"cell_type":"code","source":["# Split the data into training and validation sets\n","train_texts, val_texts, train_labels, val_labels = train_test_split(\n","    df['text'], labels, test_size=0.2, random_state=42, stratify=labels\n",")\n","train_encoded_data = tokenizer(list(train_texts), padding=True, truncation=True, return_tensors='tf')\n","val_encoded_data = tokenizer(list(val_texts), padding=True, truncation=True, return_tensors='tf')"],"metadata":{"id":"Fnbkz-9XYpc-","executionInfo":{"status":"ok","timestamp":1706079880979,"user_tz":-480,"elapsed":13811,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["train_encoded_data"],"metadata":{"id":"Fucc5dtYZM5K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079880980,"user_tz":-480,"elapsed":28,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"81e544ad-77bf-4f61-a858-42bca9154012"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': <tf.Tensor: shape=(2400, 512), dtype=int32, numpy=\n","array([[ 101, 1045, 4149, ...,    0,    0,    0],\n","       [ 101, 2025, 2069, ...,    0,    0,    0],\n","       [ 101, 1996, 2935, ...,    0,    0,    0],\n","       ...,\n","       [ 101, 1996, 3934, ...,    0,    0,    0],\n","       [ 101, 1045, 4149, ...,    0,    0,    0],\n","       [ 101, 1045, 2031, ...,    0,    0,    0]], dtype=int32)>, 'token_type_ids': <tf.Tensor: shape=(2400, 512), dtype=int32, numpy=\n","array([[0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0]], dtype=int32)>, 'attention_mask': <tf.Tensor: shape=(2400, 512), dtype=int32, numpy=\n","array([[1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       ...,\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0]], dtype=int32)>}"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["val_encoded_data"],"metadata":{"id":"K5wsA_tVZQG4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079880980,"user_tz":-480,"elapsed":25,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"a8b2b358-5975-4521-8b07-d893e01e7298"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': <tf.Tensor: shape=(600, 512), dtype=int32, numpy=\n","array([[  101,  2023,  2338, ...,     0,     0,     0],\n","       [  101,  1045,  1005, ...,     0,     0,     0],\n","       [  101,  1996,  2338, ...,     0,     0,     0],\n","       ...,\n","       [  101,  1045,  2428, ...,     0,     0,     0],\n","       [  101,  8307,  5667, ...,     0,     0,     0],\n","       [  101, 20753,  1024, ...,     0,     0,     0]], dtype=int32)>, 'token_type_ids': <tf.Tensor: shape=(600, 512), dtype=int32, numpy=\n","array([[0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0]], dtype=int32)>, 'attention_mask': <tf.Tensor: shape=(600, 512), dtype=int32, numpy=\n","array([[1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       ...,\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0]], dtype=int32)>}"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["train_labels"],"metadata":{"id":"ddJIqMfJZT9h","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079880980,"user_tz":-480,"elapsed":22,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"3a4807cf-efa2-4882-f529-aab3b8f81471"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       ...,\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [1., 0., 0.]], dtype=float32)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["val_labels"],"metadata":{"id":"LsseaXsjZWNM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079880980,"user_tz":-480,"elapsed":20,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"0d605ea0-4418-4c13-d5db-95602d1af6f3"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       ...,\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 0., 1.]], dtype=float32)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["# Learning Model"],"metadata":{"id":"kRcusVBvDcMT"}},{"cell_type":"code","source":["# Common Parameters\n","input_shape = (encoded_data['input_ids'].shape[1],)\n","num_classes = 3\n","bigru_units = 64\n","bilstm_units = 50\n","learning_rate = 1e-5\n","batch_size = 16\n","epochs = 10\n","validation_split = 0.2\n"],"metadata":{"id":"57fO8pnZDyRq","executionInfo":{"status":"ok","timestamp":1706079880980,"user_tz":-480,"elapsed":19,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# 解决梯度问题！！好耶！\n","bert_model.trainable = True"],"metadata":{"id":"iZXT9OJpPGfX","executionInfo":{"status":"ok","timestamp":1706079880980,"user_tz":-480,"elapsed":19,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Define input layer\n","input_layer = tf.keras.layers.Input(shape=input_shape, dtype=tf.int32, name=\"input_ids\")\n","\n","# Use BERT model\n","bert_output = bert_model(input_layer)['last_hidden_state']\n","\n","# Bidirectional GRU layer with attention\n","bi_lstm1 = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(bigru_units, return_sequences=True))(bert_output)\n","\n","\n","# Bidirectional LSTM layer\n","bi_lstm2 = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(bilstm_units))(bi_lstm1)\n","\n","# Output layer\n","output_layer = tf.keras.layers.Dense(num_classes, activation='softmax')(bi_lstm2)\n","\n","# Create the model\n","model = tf.keras.Model(inputs=input_layer, outputs=output_layer)\n","\n","model.compile(optimizer=Adam(learning_rate=learning_rate), loss='categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"AWtO0kicEdwa","executionInfo":{"status":"ok","timestamp":1706079888706,"user_tz":-480,"elapsed":7743,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"id":"Fz7weNnyGpox","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706079888707,"user_tz":-480,"elapsed":31,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"7538d3d4-9199-4937-98c1-25367b6a0977"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_ids (InputLayer)      [(None, 512)]             0         \n","                                                                 \n"," tf_bert_model (TFBertModel  TFBaseModelOutputWithPo   109482240 \n"," )                           olingAndCrossAttentions             \n","                             (last_hidden_state=(Non             \n","                             e, 512, 768),                       \n","                              pooler_output=(None, 7             \n","                             68),                                \n","                              past_key_values=None,              \n","                             hidden_states=None, att             \n","                             entions=None, cross_att             \n","                             entions=None)                       \n","                                                                 \n"," bidirectional (Bidirection  (None, 512, 128)          426496    \n"," al)                                                             \n","                                                                 \n"," bidirectional_1 (Bidirecti  (None, 100)               71600     \n"," onal)                                                           \n","                                                                 \n"," dense (Dense)               (None, 3)                 303       \n","                                                                 \n","=================================================================\n","Total params: 109980639 (419.54 MB)\n","Trainable params: 109980639 (419.54 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"markdown","source":["# Model Training"],"metadata":{"id":"rpnigHdcEFhg"}},{"cell_type":"code","source":["# Training the model\n","history = model.fit(train_encoded_data['input_ids'], train_labels, epochs=epochs, batch_size=batch_size, validation_split=validation_split)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jZ9SN830EE2V","outputId":"6b34eb83-e368-43ac-c8f5-1d99da16775c","executionInfo":{"status":"ok","timestamp":1706121360382,"user_tz":-480,"elapsed":958138,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"execution_count":21,"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Epoch 1/10\n"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n","WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n","WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n","WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n"]},{"output_type":"stream","name":"stdout","text":["120/120 [==============================] - 4184s 34s/step - loss: 1.0655 - accuracy: 0.4161 - val_loss: 0.9426 - val_accuracy: 0.5479\n","Epoch 2/10\n","120/120 [==============================] - 4140s 35s/step - loss: 0.8156 - accuracy: 0.6422 - val_loss: 0.7009 - val_accuracy: 0.6938\n","Epoch 3/10\n","120/120 [==============================] - 4040s 34s/step - loss: 0.6235 - accuracy: 0.7432 - val_loss: 0.6576 - val_accuracy: 0.7021\n","Epoch 4/10\n","120/120 [==============================] - 4131s 34s/step - loss: 0.4589 - accuracy: 0.8156 - val_loss: 0.6525 - val_accuracy: 0.7250\n","Epoch 5/10\n","120/120 [==============================] - 4090s 34s/step - loss: 0.3313 - accuracy: 0.8901 - val_loss: 0.7239 - val_accuracy: 0.7146\n","Epoch 6/10\n","120/120 [==============================] - 4121s 34s/step - loss: 0.2079 - accuracy: 0.9365 - val_loss: 0.7440 - val_accuracy: 0.7167\n","Epoch 7/10\n","120/120 [==============================] - 4198s 35s/step - loss: 0.1577 - accuracy: 0.9563 - val_loss: 0.8009 - val_accuracy: 0.7312\n","Epoch 8/10\n","120/120 [==============================] - 4183s 35s/step - loss: 0.1106 - accuracy: 0.9719 - val_loss: 0.9290 - val_accuracy: 0.7167\n","Epoch 9/10\n","120/120 [==============================] - 4211s 35s/step - loss: 0.1187 - accuracy: 0.9651 - val_loss: 0.8926 - val_accuracy: 0.7250\n","Epoch 10/10\n","120/120 [==============================] - 4172s 35s/step - loss: 0.0759 - accuracy: 0.9818 - val_loss: 1.0317 - val_accuracy: 0.6917\n"]}]},{"cell_type":"code","source":["\n","# Plot learning curves\n","plt.plot(history.history['accuracy'], label='Training Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.legend()\n","plt.show()\n"],"metadata":{"id":"O2QRqnhBR0A1","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1706121360383,"user_tz":-480,"elapsed":2,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"51109ff8-f2e4-4049-addc-21f1e411d223"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Results"],"metadata":{"id":"kaGx1jOyRd5c"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from sklearn.metrics import accuracy_score, f1_score, recall_score, confusion_matrix\n","import seaborn as sns\n","from sklearn.manifold import TSNE\n","\n","# Prediction on the validation set\n","predictions = model.predict(val_encoded_data['input_ids'])\n","\n","# Convert one-hot encoded predictions to class labels\n","predicted_labels = label_encoder.inverse_transform(predictions.argmax(axis=1))\n","\n","# Convert one-hot encoded true labels to class labels\n","true_labels = label_encoder.inverse_transform(val_labels.argmax(axis=1))\n","\n","\n"],"metadata":{"id":"0eDOaVZsQ9j0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706121809315,"user_tz":-480,"elapsed":448933,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"0e5843f2-c8dd-4dc9-80a6-7741d8a2fcb1"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["19/19 [==============================] - 418s 22s/step\n"]}]},{"cell_type":"code","source":["# Evaluate accuracy, F1 score, and recall\n","accuracy = accuracy_score(true_labels, predicted_labels)\n","f1 = f1_score(true_labels, predicted_labels, average='weighted')\n","recall = recall_score(true_labels, predicted_labels, average='weighted')\n","\n","print(f\"Accuracy: {accuracy:.4f}\")\n","print(f\"F1 Score: {f1:.4f}\")\n","print(f\"Recall: {recall:.4f}\")\n"],"metadata":{"id":"5zV6n_YpR8Ng","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706121809326,"user_tz":-480,"elapsed":0,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"2620abf7-b06f-44ba-ece0-807ad7e3dfc0"},"execution_count":24,"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Accuracy: 0.7083\n","F1 Score: 0.7140\n","Recall: 0.7083\n"]}]},{"cell_type":"code","source":["\n","# Confusion matrix\n","conf_matrix = confusion_matrix(true_labels, predicted_labels)\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=label_encoder.classes_, yticklabels=label_encoder.classes_)\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted Labels')\n","plt.ylabel('True Labels')\n","plt.show()"],"metadata":{"id":"7i8amc_gR3tr","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1706121809319,"user_tz":-480,"elapsed":3,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"64fa1f4e-8563-4b8b-a4f2-f4071c6efe00"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.0"},"colab":{"provenance":[{"file_id":"1rPYB7E5SGxMWgg7Nl3w1cR-2K0aIvBKe","timestamp":1706079672898},{"file_id":"12vAAVgALlUE51P6uIsc2sm-Bz8wt5S6P","timestamp":1705994158511}],"machine_shape":"hm"},"widgets":{"application/vnd.jupyter.widget-state+json":{"ff7ad76c17fd43e6ad20e6d3cd1f7333":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a91baf68a26b4a1b84e5cb0d157993d7","IPY_MODEL_0986463ffb114bbf99ab78f0106ace95","IPY_MODEL_b327f1b15c5241f5b00a5963b165369c"],"layout":"IPY_MODEL_624079f3ae6347bcbfaa7e568e10976a"}},"a91baf68a26b4a1b84e5cb0d157993d7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0abf6ba8d2c24208a8a0493c6150d0ce","placeholder":"​","style":"IPY_MODEL_4d0f29eb42094080a1a886c31f92d504","value":"tokenizer_config.json: 100%"}},"0986463ffb114bbf99ab78f0106ace95":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_195815f3267345948cc292f834ca7273","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_194aebaa0e4347c19ca6c9de4e9d83df","value":28}},"b327f1b15c5241f5b00a5963b165369c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_dfc41185199d401ea05bea442e648e85","placeholder":"​","style":"IPY_MODEL_6f3fac1fc6b04fcc9cb2e8bb842c17f1","value":" 28.0/28.0 [00:00&lt;00:00, 1.94kB/s]"}},"624079f3ae6347bcbfaa7e568e10976a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0abf6ba8d2c24208a8a0493c6150d0ce":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4d0f29eb42094080a1a886c31f92d504":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"195815f3267345948cc292f834ca7273":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"194aebaa0e4347c19ca6c9de4e9d83df":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"dfc41185199d401ea05bea442e648e85":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6f3fac1fc6b04fcc9cb2e8bb842c17f1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e3e3929ddc1648248b8a008ca0f8fd8e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_59290834ffd8444c9fffdca193d84d4a","IPY_MODEL_ef9e7c03bd124e8a95774037b447d529","IPY_MODEL_d0c1b6beafdd4782a8baf6567f35d39f"],"layout":"IPY_MODEL_15043098d4854629b7c11621d0f822f1"}},"59290834ffd8444c9fffdca193d84d4a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_157022e78e19425f8c1e327ecb1b571c","placeholder":"​","style":"IPY_MODEL_331cbf7833b24a67a29811f19f8f374b","value":"vocab.txt: 100%"}},"ef9e7c03bd124e8a95774037b447d529":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9180e8ffbc9f49af91bbbe3500dfdd6c","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_38c92d31c69c418c9b19dfeda10fa9f2","value":231508}},"d0c1b6beafdd4782a8baf6567f35d39f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c6d0301bfbe7416e9c6547d0a3d5ab0c","placeholder":"​","style":"IPY_MODEL_21aa07e6c0004569847f9bded6eb94bf","value":" 232k/232k [00:00&lt;00:00, 3.84MB/s]"}},"15043098d4854629b7c11621d0f822f1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"157022e78e19425f8c1e327ecb1b571c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"331cbf7833b24a67a29811f19f8f374b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9180e8ffbc9f49af91bbbe3500dfdd6c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"38c92d31c69c418c9b19dfeda10fa9f2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c6d0301bfbe7416e9c6547d0a3d5ab0c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"21aa07e6c0004569847f9bded6eb94bf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1f202b5524a54dcf9ce29b9d4e728ab4":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_608672d02cc744ec802b302426e7e13b","IPY_MODEL_7741c6c1e34d408fb9bba8d49135b0fc","IPY_MODEL_e367d40071b64a1b97e55b6d869debb1"],"layout":"IPY_MODEL_6f1d0850f6bf4a1389e2277c059724db"}},"608672d02cc744ec802b302426e7e13b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ba55aab57a2443ee9bbb0ca57be425dd","placeholder":"​","style":"IPY_MODEL_8573143b9ecf4a4981580d7b99e5bb3c","value":"tokenizer.json: 100%"}},"7741c6c1e34d408fb9bba8d49135b0fc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_265e9317dcff4e75b8f4c97b1f644420","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_531438073bcf4cbf97353919d369582b","value":466062}},"e367d40071b64a1b97e55b6d869debb1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a0ea787435164194bb9c30340d48a391","placeholder":"​","style":"IPY_MODEL_b57c48b3281742009f86761cba14d6e3","value":" 466k/466k [00:00&lt;00:00, 15.6MB/s]"}},"6f1d0850f6bf4a1389e2277c059724db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ba55aab57a2443ee9bbb0ca57be425dd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8573143b9ecf4a4981580d7b99e5bb3c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"265e9317dcff4e75b8f4c97b1f644420":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"531438073bcf4cbf97353919d369582b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a0ea787435164194bb9c30340d48a391":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b57c48b3281742009f86761cba14d6e3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"77b954cbd9734b838ffa6b1cc86b83be":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_85d904209c0c407ba6f517209ef143ac","IPY_MODEL_19a0af6acf204f00a0270d1cab238762","IPY_MODEL_fb82c40c4a2f41a6823427f0e4cb5fd5"],"layout":"IPY_MODEL_2deda2c9283f4fb482496b8a6741c29c"}},"85d904209c0c407ba6f517209ef143ac":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bcf8e019b96740c29cd8d0b8f9e7ce1e","placeholder":"​","style":"IPY_MODEL_2925fef93ce54ed0a78843edb71ab9b2","value":"config.json: 100%"}},"19a0af6acf204f00a0270d1cab238762":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f6098998d1234b3b9f15a3e08cfb7b3d","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_38cdbbf84fb44ecb9dad7947ea574336","value":570}},"fb82c40c4a2f41a6823427f0e4cb5fd5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_724cb9d53e7a4662b8b9cdd2fda686b7","placeholder":"​","style":"IPY_MODEL_1f7d2ff739744726bfa985081c240e47","value":" 570/570 [00:00&lt;00:00, 46.2kB/s]"}},"2deda2c9283f4fb482496b8a6741c29c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bcf8e019b96740c29cd8d0b8f9e7ce1e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2925fef93ce54ed0a78843edb71ab9b2":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f6098998d1234b3b9f15a3e08cfb7b3d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"38cdbbf84fb44ecb9dad7947ea574336":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"724cb9d53e7a4662b8b9cdd2fda686b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1f7d2ff739744726bfa985081c240e47":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"83096d936f894bea99e2ecfae50e711f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9e2407a7d56e4f8e98bdbcc08721aa5c","IPY_MODEL_f0cd8dc5d1ab4452bb060be4fd4fd0f5","IPY_MODEL_63c2232f3f01460bb7cfc944672beae8"],"layout":"IPY_MODEL_44a575cde7d14e3d8af353b61d8a6578"}},"9e2407a7d56e4f8e98bdbcc08721aa5c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a7c9c68fbd7a4a75b93fa21356734673","placeholder":"​","style":"IPY_MODEL_b2f766cd12524648acc3db498bcbbc95","value":"model.safetensors: 100%"}},"f0cd8dc5d1ab4452bb060be4fd4fd0f5":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_177ac8e9906341dd87f112410c9ee225","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_20b7335bd2664d2292cff3f150e4592c","value":440449768}},"63c2232f3f01460bb7cfc944672beae8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8bf122c802cf49e4a6b621922fb0ef24","placeholder":"​","style":"IPY_MODEL_21925c9fa65f471d9566cbf24cf81aed","value":" 440M/440M [00:03&lt;00:00, 134MB/s]"}},"44a575cde7d14e3d8af353b61d8a6578":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a7c9c68fbd7a4a75b93fa21356734673":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b2f766cd12524648acc3db498bcbbc95":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"177ac8e9906341dd87f112410c9ee225":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"20b7335bd2664d2292cff3f150e4592c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8bf122c802cf49e4a6b621922fb0ef24":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"21925c9fa65f471d9566cbf24cf81aed":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}