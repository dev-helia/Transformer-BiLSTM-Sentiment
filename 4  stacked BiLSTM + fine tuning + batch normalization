{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":10892,"status":"ok","timestamp":1707101679575,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"-IZiGjgg-Zbv"},"outputs":[],"source":["import re\n","import numpy as np\n","import pandas as pd\n","import torch\n","import tensorflow as tf\n","from tqdm import tqdm\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix, accuracy_score, classification_report\n","from sklearn.preprocessing import LabelEncoder\n","from torch.nn import functional as F\n","from torch.utils.data import DataLoader, Dataset\n","from transformers import (\n","    BertTokenizer, BertModel, GPT2Tokenizer, GPT2Model, AutoModel, AutoTokenizer, AutoModelForMaskedLM,\n","    TFBertModel\n",")\n","from keras.utils import to_categorical\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.layers import Embedding, SimpleRNN, Bidirectional, Dense, GRU, LSTM\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.callbacks import EarlyStopping\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import  f1_score, recall_score\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"2wxHNO3W_oe6"},"source":["# Data Loading and Cleaning"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":76355,"status":"ok","timestamp":1707101755927,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"gSIxFq4P-Zby","outputId":"f5627d0d-9dd1-4cff-f75d-9f0cb28b0c4d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["# reading Data from file\n","from google.colab import drive\n","drive.mount('/content/drive/')\n","# reading Data from file\n","df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Books_rating.csv')\n","\n","# convert 'review/helpfulness' column to numeric and remove rows where the value is less than 0.5\n","# remain the helpful reviews\n","df[['numerator', 'denominator']] = df['review/helpfulness'].str.split('/', expand=True)\n","df['numerator'] = pd.to_numeric(df['numerator'], errors='coerce')\n","df['denominator'] = pd.to_numeric(df['denominator'], errors='coerce')\n","df['review/helpfulness'] = df['numerator'] / df['denominator']\n","df = df.drop(['numerator', 'denominator'], axis=1)\n","df = df[df['review/helpfulness'] >= 0.5]\n","# drop null values\n","df = df[['review/score','review/text']]\n","df.dropna(inplace = True)\n","# rename the column for better readability\n","df = df.rename(columns={'review/score': 'score', 'review/text': 'text'})"]},{"cell_type":"markdown","metadata":{"id":"YIorUdmuAN9i"},"source":["# Data Transformation\n"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1707101755927,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"OB-snIuqAWjN"},"outputs":[],"source":["\n","# Set scores 1-2 as negative, 3 as neutral, and 4-5 as positive; then visualize the histogram of the data\n","# Define a function to map scores to sentiment labels\n","def map_score_to_sentiment(score):\n","    if score <= 2:\n","        return 'negative'\n","    elif score == 3:\n","        return 'neutral'\n","    else:\n","        return 'positive'\n","\n","# Map sentiment labels\n","df['sentiment'] = df['score'].apply(map_score_to_sentiment)\n","\n","\n","\n"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1707101755927,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"jYPZK8b-XgKc","outputId":"d5c2cced-5851-4c11-b587-c656371c6ca0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    score                                               text sentiment\n","0     4.0  This is only for Julie Strain fans. It's a col...  positive\n","1     5.0  I don't care much for Dr. Seuss but after read...  positive\n","2     5.0  If people become the books they read and if \"t...  positive\n","3     4.0  Theodore Seuss Geisel (1904-1991), aka &quot;D...  positive\n","4     4.0  Philip Nel - Dr. Seuss: American IconThis is b...  positive\n","5     4.0  \"Dr. Seuss: American Icon\" by Philip Nel is a ...  positive\n","6     5.0  Theodor Seuss Giesel was best known as 'Dr. Se...  positive\n","9     4.0  As far as I am aware, this is the first book-l...  positive\n","10    5.0  I just finished the book, &quot;Wonderful Wors...  positive\n","11    5.0  Many small churches feel like they can not hav...  positive"],"text/html":["\n","  <div id=\"df-0634b06c-b2af-49f5-b9fc-5e9ac1d9e2d8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>text</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4.0</td>\n","      <td>This is only for Julie Strain fans. It's a col...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.0</td>\n","      <td>I don't care much for Dr. Seuss but after read...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5.0</td>\n","      <td>If people become the books they read and if \"t...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>Theodore Seuss Geisel (1904-1991), aka &amp;quot;D...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4.0</td>\n","      <td>Philip Nel - Dr. Seuss: American IconThis is b...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4.0</td>\n","      <td>\"Dr. Seuss: American Icon\" by Philip Nel is a ...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>5.0</td>\n","      <td>Theodor Seuss Giesel was best known as 'Dr. Se...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>4.0</td>\n","      <td>As far as I am aware, this is the first book-l...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>5.0</td>\n","      <td>I just finished the book, &amp;quot;Wonderful Wors...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5.0</td>\n","      <td>Many small churches feel like they can not hav...</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0634b06c-b2af-49f5-b9fc-5e9ac1d9e2d8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0634b06c-b2af-49f5-b9fc-5e9ac1d9e2d8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0634b06c-b2af-49f5-b9fc-5e9ac1d9e2d8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6cac560b-cb77-47be-b20a-f741dbef9d3f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6cac560b-cb77-47be-b20a-f741dbef9d3f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6cac560b-cb77-47be-b20a-f741dbef9d3f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}],"source":["df.head(10)"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":658,"status":"ok","timestamp":1707101756580,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"I0-t6wJmXxg4"},"outputs":[],"source":["\n","# Define LabelEncoder\n","label_encoder = LabelEncoder()\n","\n","# Encode sentiment labels as integers\n","df['label'] = label_encoder.fit_transform(df['sentiment'])"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1707101756580,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"JGvdL0ADXehD"},"outputs":[],"source":["df['label'] = pd.to_numeric(df['label'], downcast='integer')\n","samples_per_category = 1000\n","df = df.groupby('label').apply(lambda x: x.sample(n=samples_per_category, random_state=1)).reset_index(drop=True)\n","df = df.sample(frac=1, random_state=2).reset_index(drop=True)\n"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"elapsed":1267,"status":"ok","timestamp":1707101757845,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"FXUFfc8pXa1Y","outputId":"fa2ecc32-e08d-4eb2-c49b-763ded68ba37"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["\n","# Visualize the distribution histogram of sentiment labels in the dataset\n","sns.countplot(x='sentiment', data=df)\n","plt.title('Distribution of Sentiments')\n","plt.show()\n","\n"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1707101757846,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"1uZNIZ42YbdK","outputId":"29c0a57e-9871-4292-d51b-81ca8f063475"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3000, 4)"]},"metadata":{},"execution_count":8}],"source":["df.shape"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1707101757846,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"KnFlHkWCAmMu","outputId":"66b897ad-66c1-4f95-9d1d-5605ef625b04"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   score                                               text sentiment  label\n","0    3.0  I very much looked forward to this book and re...   neutral      1\n","1    1.0  If this ghastly pastiche (or perhaps unintenti...  negative      0\n","2    1.0  First off, let me say that I *like* sentimenta...  negative      0\n","3    5.0  this book was great, but i never actually read...  positive      2\n","4    3.0  To bring Alexis de Tocqueville's concerns (esp...   neutral      1\n","5    3.0  This little book (almost 100 pages) was first ...   neutral      1\n","6    4.0  While everybody rates this book very highly (a...  positive      2\n","7    2.0  This is not a review of the content of the boo...  negative      0\n","8    1.0  I am extremely disappointed in the print quali...  negative      0\n","9    5.0  The words often found between the torn and tat...  positive      2"],"text/html":["\n","  <div id=\"df-b55f0d71-2c2d-41cf-9fff-09ada7c4ee1c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>score</th>\n","      <th>text</th>\n","      <th>sentiment</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.0</td>\n","      <td>I very much looked forward to this book and re...</td>\n","      <td>neutral</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>If this ghastly pastiche (or perhaps unintenti...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>First off, let me say that I *like* sentimenta...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.0</td>\n","      <td>this book was great, but i never actually read...</td>\n","      <td>positive</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.0</td>\n","      <td>To bring Alexis de Tocqueville's concerns (esp...</td>\n","      <td>neutral</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3.0</td>\n","      <td>This little book (almost 100 pages) was first ...</td>\n","      <td>neutral</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>4.0</td>\n","      <td>While everybody rates this book very highly (a...</td>\n","      <td>positive</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.0</td>\n","      <td>This is not a review of the content of the boo...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1.0</td>\n","      <td>I am extremely disappointed in the print quali...</td>\n","      <td>negative</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>5.0</td>\n","      <td>The words often found between the torn and tat...</td>\n","      <td>positive</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b55f0d71-2c2d-41cf-9fff-09ada7c4ee1c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b55f0d71-2c2d-41cf-9fff-09ada7c4ee1c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b55f0d71-2c2d-41cf-9fff-09ada7c4ee1c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-177c3721-9e2a-4089-a558-a140fbc8ef65\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-177c3721-9e2a-4089-a558-a140fbc8ef65')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-177c3721-9e2a-4089-a558-a140fbc8ef65 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}],"source":["df.head(10)"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1707101757846,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"_Z3uO_b7AwJW"},"outputs":[],"source":["# Assuming df is your DataFrame and 'score' is the column containing class labels\n","labels = LabelEncoder().fit(df['label']).transform(df['label'])\n","num_classes = 3\n","\n","# Convert labels to one-hot encoding\n","labels = to_categorical(labels, num_classes=num_classes)\n"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399,"referenced_widgets":["f101fe438c864932810428c6eddaf936","e6bb371c0b2748beb20c8649dd6508ff","040d86672d644c678bbdbda906fd0205","40934e5867e74582af6adeb347ffa067","483a2bf1559942cda50a79e348006400","4d9ca34fb38f4f0295984d7ea8942de4","29d513420dc640d18600d4e50a1d740b","2f574519544b4614aaa28c2708376010","7c0657d6bb8f4c2389d15dcd54377996","ed40b1cc679a49e199ed2fb9c198ce65","a64194c57b8b433b844f040f583e15a4","4f1bfa33051e42b1abb6cdf5a57dde35","2c6a6ba29aa54ee598c7fbd8292ed9bf","644deed8143544269f86f17507757a30","5e63358c9c66401f84440925d88b3c49","f33a9f4f5cf74ca4ac2551031af9a2ab","9c43b1d53c8b4e06a99aa490bbbad813","ab1050c1c0eb4a89a313ac09cf8150d0","5b0f13e4dab4419daa7cbb9ede4d1073","20b92b1fef224a0c8ab6150b0ab964f9","d6b45b9c8c11491cadc9b55314adfc70","62988319a166490e9578dcf517ab5d3d","7154164ebc884a76986dd0bff1c0075a","0d0ad345e2e74838849f43a92f6fda6c","af5e0e5b412e43f98c7c79e3f7b1baa7","04dd37007f494028a4d3770758fd64c8","1c454704f3314a07b889f950f38cfbf2","609bc7692f7a4c9daa82e449fe79fe34","7099f32f57e245b79805f2311483e3a7","9407eee205cc49159706611b465a75fb","aef00c61a00440fd8a91f6245c5ad1db","89647c080caa453299a8aa3d160196e0","e8c7b56e234646278a4ce4ff62c90713","3d07273f1de54748afe3fe2cb5ad59a5","7abeca26edfe4d96b6a9f84615f23633","c3aff16db382415a8fb10aa9c6992fbd","358ec45fc57740479865310488a71444","0b492254da2142ad839d5ed8546c8dcb","cb5453fe3a794ba4ae6e43ca55f20743","86c692bbe2b446768771635b62d16887","9c660120db7b413fb1b618bed4df4fde","6b9e3d1e9bda44e6b0c317232969fc92","eb9a7023029e4475b14ef279c30a24fc","7f68de7cedb14beeb94786ed2c7960ca","dbb2078a4f71418aacd138e08ac2ee6f","563c6af586764155a05c77c1d069621a","b206a852365d48828680ae65b03a9834","d219a0aa1cc94a6eb9a86c448a06f526","ec9f82ecf9074b73b503c893a2b81d68","206f824342084871ba8192dd5d188ba9","d3eab802c2f04f21818bcd6807427512","1d80c8799eda4abeb761b3d3d89264e2","e3035f57acea4fc8978961c8209e7ed9","4bf0cd3c5de6419caad6745068262290","a1ff8494de8a4f189dd9391d9f15bd4d"]},"executionInfo":{"elapsed":24013,"status":"ok","timestamp":1707101781852,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"rnBeNLvlCDuq","outputId":"9e40ad48-ea42-4647-eac9-8841c685770c"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f101fe438c864932810428c6eddaf936"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4f1bfa33051e42b1abb6cdf5a57dde35"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7154164ebc884a76986dd0bff1c0075a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3d07273f1de54748afe3fe2cb5ad59a5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/440M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"dbb2078a4f71418aacd138e08ac2ee6f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFBertModel: ['cls.seq_relationship.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.bias']\n","- This IS expected if you are initializing TFBertModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFBertModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","All the weights of TFBertModel were initialized from the PyTorch model.\n","If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertModel for predictions without further training.\n"]}],"source":["# Load BERT tokenizer and model\n","tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')\n","bert_model = TFBertModel.from_pretrained('bert-base-uncased', trainable=True)\n","# Tokenize input text\n","encoded_data = tokenizer(list(df['text']), padding=True, truncation=True, return_tensors='tf')"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":12431,"status":"ok","timestamp":1707101794281,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"Fnbkz-9XYpc-"},"outputs":[],"source":["# Split the data into training and validation sets\n","train_texts, val_texts, train_labels, val_labels = train_test_split(\n","    df['text'], labels, test_size=0.2, random_state=42, stratify=labels\n",")\n","train_encoded_data = tokenizer(list(train_texts), padding=True, truncation=True, return_tensors='tf')\n","val_encoded_data = tokenizer(list(val_texts), padding=True, truncation=True, return_tensors='tf')"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1707101794282,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"Fucc5dtYZM5K","outputId":"140e6222-2035-4447-f30b-0bf35b2d03ab"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': <tf.Tensor: shape=(2400, 512), dtype=int32, numpy=\n","array([[ 101, 1045, 4149, ...,    0,    0,    0],\n","       [ 101, 2025, 2069, ...,    0,    0,    0],\n","       [ 101, 1996, 2935, ...,    0,    0,    0],\n","       ...,\n","       [ 101, 1996, 3934, ...,    0,    0,    0],\n","       [ 101, 1045, 4149, ...,    0,    0,    0],\n","       [ 101, 1045, 2031, ...,    0,    0,    0]], dtype=int32)>, 'token_type_ids': <tf.Tensor: shape=(2400, 512), dtype=int32, numpy=\n","array([[0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0]], dtype=int32)>, 'attention_mask': <tf.Tensor: shape=(2400, 512), dtype=int32, numpy=\n","array([[1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       ...,\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0]], dtype=int32)>}"]},"metadata":{},"execution_count":13}],"source":["train_encoded_data"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1707101794282,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"K5wsA_tVZQG4","outputId":"eddc6c01-d070-4426-a515-7a9cc5ecaf45"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': <tf.Tensor: shape=(600, 512), dtype=int32, numpy=\n","array([[  101,  2023,  2338, ...,     0,     0,     0],\n","       [  101,  1045,  1005, ...,     0,     0,     0],\n","       [  101,  1996,  2338, ...,     0,     0,     0],\n","       ...,\n","       [  101,  1045,  2428, ...,     0,     0,     0],\n","       [  101,  8307,  5667, ...,     0,     0,     0],\n","       [  101, 20753,  1024, ...,     0,     0,     0]], dtype=int32)>, 'token_type_ids': <tf.Tensor: shape=(600, 512), dtype=int32, numpy=\n","array([[0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0]], dtype=int32)>, 'attention_mask': <tf.Tensor: shape=(600, 512), dtype=int32, numpy=\n","array([[1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       ...,\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0],\n","       [1, 1, 1, ..., 0, 0, 0]], dtype=int32)>}"]},"metadata":{},"execution_count":14}],"source":["val_encoded_data"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1707101794282,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"ddJIqMfJZT9h","outputId":"e4504ac7-6c4e-4167-bf89-f334f2b1bcd1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 0., 1.],\n","       [0., 0., 1.],\n","       ...,\n","       [0., 1., 0.],\n","       [0., 1., 0.],\n","       [1., 0., 0.]], dtype=float32)"]},"metadata":{},"execution_count":15}],"source":["train_labels"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1707101794282,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"LsseaXsjZWNM","outputId":"4d0496a1-9cce-4199-ec00-7bba70ef11fe"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 1., 0.],\n","       ...,\n","       [1., 0., 0.],\n","       [1., 0., 0.],\n","       [0., 0., 1.]], dtype=float32)"]},"metadata":{},"execution_count":16}],"source":["val_labels"]},{"cell_type":"markdown","metadata":{"id":"kRcusVBvDcMT"},"source":["# Learning Model"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1707101794282,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"57fO8pnZDyRq"},"outputs":[],"source":["# Common Parameters\n","input_shape = (encoded_data['input_ids'].shape[1],)\n","num_classes = 3\n","bigru_units = 64\n","bilstm_units = 50\n","learning_rate = 1e-5\n","batch_size = 16\n","epochs = 10\n","validation_split = 0.2\n"]},{"cell_type":"code","execution_count":18,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1707101794282,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"iZXT9OJpPGfX"},"outputs":[],"source":["# 解决梯度问题！！好耶！\n","bert_model.trainable = True"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":7319,"status":"ok","timestamp":1707101801589,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"AWtO0kicEdwa"},"outputs":[],"source":["# Define input layer\n","input_layer = tf.keras.layers.Input(shape=input_shape, dtype=tf.int32, name=\"input_ids\")\n","\n","# Use BERT model\n","bert_output = bert_model(input_layer)['last_hidden_state']\n","\n","# Bidirectional GRU layer with attention\n","bi_lstm1 = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(bigru_units, return_sequences=True))(bert_output)\n","\n","#Batch normalization 1\n","bi_lstm1_output1 = tf.keras.layers.BatchNormalization()(bi_lstm1)\n","\n","# Bidirectional LSTM layer\n","bi_lstm2 = tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(bilstm_units))(bi_lstm1_output1)\n","\n","# Bacth normalization 2\n","bi_lstm2_output = tf.keras.layers.BatchNormalization()(bi_lstm2)\n","\n","# Output layer\n","output_layer = tf.keras.layers.Dense(num_classes, activation='softmax')(bi_lstm2_output)\n","\n","# Create the model\n","model = tf.keras.Model(inputs=input_layer, outputs=output_layer)\n","\n","model.compile(optimizer=Adam(learning_rate=learning_rate), loss='categorical_crossentropy', metrics=['accuracy'])"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":746,"status":"ok","timestamp":1707101802319,"user":{"displayName":"Tao He","userId":"08580683798506804735"},"user_tz":-480},"id":"Fz7weNnyGpox","outputId":"86b650dd-1576-470e-dcc6-c6b8e5493913"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_ids (InputLayer)      [(None, 512)]             0         \n","                                                                 \n"," tf_bert_model (TFBertModel  TFBaseModelOutputWithPo   109482240 \n"," )                           olingAndCrossAttentions             \n","                             (last_hidden_state=(Non             \n","                             e, 512, 768),                       \n","                              pooler_output=(None, 7             \n","                             68),                                \n","                              past_key_values=None,              \n","                             hidden_states=None, att             \n","                             entions=None, cross_att             \n","                             entions=None)                       \n","                                                                 \n"," bidirectional (Bidirection  (None, 512, 128)          426496    \n"," al)                                                             \n","                                                                 \n"," batch_normalization (Batch  (None, 512, 128)          512       \n"," Normalization)                                                  \n","                                                                 \n"," bidirectional_1 (Bidirecti  (None, 100)               71600     \n"," onal)                                                           \n","                                                                 \n"," batch_normalization_1 (Bat  (None, 100)               400       \n"," chNormalization)                                                \n","                                                                 \n"," dense (Dense)               (None, 3)                 303       \n","                                                                 \n","=================================================================\n","Total params: 109981551 (419.55 MB)\n","Trainable params: 109981095 (419.54 MB)\n","Non-trainable params: 456 (1.78 KB)\n","_________________________________________________________________\n"]}],"source":["model.summary()"]},{"cell_type":"markdown","metadata":{"id":"rpnigHdcEFhg"},"source":["# Model Training"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jZ9SN830EE2V","outputId":"e34ca28e-c925-4289-dcfb-935d8d673976","executionInfo":{"status":"ok","timestamp":1707140743611,"user_tz":-480,"elapsed":7775082,"user":{"displayName":"Tao He","userId":"08580683798506804735"}}},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Epoch 1/10\n"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n","WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n","WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n","WARNING:tensorflow:Gradients do not exist for variables ['tf_bert_model/bert/pooler/dense/kernel:0', 'tf_bert_model/bert/pooler/dense/bias:0'] when minimizing the loss. If you're using `model.compile()`, did you forget to provide a `loss` argument?\n"]},{"output_type":"stream","name":"stdout","text":["120/120 [==============================] - 3992s 33s/step - loss: 1.2808 - accuracy: 0.4026 - val_loss: 1.0429 - val_accuracy: 0.4187\n","Epoch 2/10\n","120/120 [==============================] - 3943s 33s/step - loss: 0.9381 - accuracy: 0.5807 - val_loss: 0.9017 - val_accuracy: 0.5854\n","Epoch 3/10\n","120/120 [==============================] - 3874s 32s/step - loss: 0.7248 - accuracy: 0.6755 - val_loss: 0.8478 - val_accuracy: 0.6292\n","Epoch 4/10\n","120/120 [==============================] - 3928s 33s/step - loss: 0.5994 - accuracy: 0.7500 - val_loss: 0.7685 - val_accuracy: 0.6604\n","Epoch 5/10\n","120/120 [==============================] - 3961s 33s/step - loss: 0.4715 - accuracy: 0.8214 - val_loss: 0.9087 - val_accuracy: 0.6125\n","Epoch 6/10\n","120/120 [==============================] - 3890s 32s/step - loss: 0.3668 - accuracy: 0.8724 - val_loss: 0.9039 - val_accuracy: 0.6292\n","Epoch 7/10\n","120/120 [==============================] - 3929s 33s/step - loss: 0.2807 - accuracy: 0.9068 - val_loss: 0.8994 - val_accuracy: 0.6500\n","Epoch 8/10\n","120/120 [==============================] - 3930s 33s/step - loss: 0.2077 - accuracy: 0.9328 - val_loss: 0.9778 - val_accuracy: 0.6333\n","Epoch 9/10\n","120/120 [==============================] - 3949s 33s/step - loss: 0.1578 - accuracy: 0.9578 - val_loss: 0.9182 - val_accuracy: 0.6667\n","Epoch 10/10\n","120/120 [==============================] - 4109s 34s/step - loss: 0.1203 - accuracy: 0.9677 - val_loss: 1.0054 - val_accuracy: 0.6792\n"]}],"source":["# Training the model\n","history = model.fit(train_encoded_data['input_ids'], train_labels, epochs=epochs, batch_size=batch_size, validation_split=validation_split)"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"O2QRqnhBR0A1","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1707140743612,"user_tz":-480,"elapsed":3,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"10a872f0-0dca-4392-c3de-70c2abcaf1c1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["\n","# Plot learning curves\n","plt.plot(history.history['accuracy'], label='Training Accuracy')\n","plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.legend()\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"kaGx1jOyRd5c"},"source":["# Results"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"0eDOaVZsQ9j0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707141191769,"user_tz":-480,"elapsed":448159,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"16f73a7f-a54f-416e-f18b-8fd78b1f4151"},"outputs":[{"output_type":"stream","name":"stdout","text":["19/19 [==============================] - 414s 22s/step\n"]}],"source":["import matplotlib.pyplot as plt\n","from sklearn.metrics import accuracy_score, f1_score, recall_score, confusion_matrix\n","import seaborn as sns\n","from sklearn.manifold import TSNE\n","\n","# Prediction on the validation set\n","predictions = model.predict(val_encoded_data['input_ids'])\n","\n","# Convert one-hot encoded predictions to class labels\n","predicted_labels = label_encoder.inverse_transform(predictions.argmax(axis=1))\n","\n","# Convert one-hot encoded true labels to class labels\n","true_labels = label_encoder.inverse_transform(val_labels.argmax(axis=1))\n","\n","\n"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"5zV6n_YpR8Ng","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707141191782,"user_tz":-480,"elapsed":0,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"97cfdc7e-209c-4f5e-de3e-73a6081ee503"},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Accuracy: 0.6633\n","F1 Score: 0.6602\n","Recall: 0.6633\n"]}],"source":["# Evaluate accuracy, F1 score, and recall\n","accuracy = accuracy_score(true_labels, predicted_labels)\n","f1 = f1_score(true_labels, predicted_labels, average='weighted')\n","recall = recall_score(true_labels, predicted_labels, average='weighted')\n","\n","print(f\"Accuracy: {accuracy:.4f}\")\n","print(f\"F1 Score: {f1:.4f}\")\n","print(f\"Recall: {recall:.4f}\")\n"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"7i8amc_gR3tr","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1707141191772,"user_tz":-480,"elapsed":2,"user":{"displayName":"Tao He","userId":"08580683798506804735"}},"outputId":"f804cfcf-10c7-49fe-d6d5-cc0d0490f581"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["\n","# Confusion matrix\n","conf_matrix = confusion_matrix(true_labels, predicted_labels)\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=label_encoder.classes_, yticklabels=label_encoder.classes_)\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted Labels')\n","plt.ylabel('True Labels')\n","plt.show()"]}],"metadata":{"colab":{"machine_shape":"hm","provenance":[{"file_id":"11B_eWBJN--IznlFwBadE_TiAYAOD8mKz","timestamp":1707050020514},{"file_id":"1rPYB7E5SGxMWgg7Nl3w1cR-2K0aIvBKe","timestamp":1706079672898},{"file_id":"12vAAVgALlUE51P6uIsc2sm-Bz8wt5S6P","timestamp":1705994158511}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.0"},"widgets":{"application/vnd.jupyter.widget-state+json":{"f101fe438c864932810428c6eddaf936":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e6bb371c0b2748beb20c8649dd6508ff","IPY_MODEL_040d86672d644c678bbdbda906fd0205","IPY_MODEL_40934e5867e74582af6adeb347ffa067"],"layout":"IPY_MODEL_483a2bf1559942cda50a79e348006400"}},"e6bb371c0b2748beb20c8649dd6508ff":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4d9ca34fb38f4f0295984d7ea8942de4","placeholder":"​","style":"IPY_MODEL_29d513420dc640d18600d4e50a1d740b","value":"tokenizer_config.json: 100%"}},"040d86672d644c678bbdbda906fd0205":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_2f574519544b4614aaa28c2708376010","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7c0657d6bb8f4c2389d15dcd54377996","value":28}},"40934e5867e74582af6adeb347ffa067":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ed40b1cc679a49e199ed2fb9c198ce65","placeholder":"​","style":"IPY_MODEL_a64194c57b8b433b844f040f583e15a4","value":" 28.0/28.0 [00:00&lt;00:00, 1.95kB/s]"}},"483a2bf1559942cda50a79e348006400":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4d9ca34fb38f4f0295984d7ea8942de4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"29d513420dc640d18600d4e50a1d740b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2f574519544b4614aaa28c2708376010":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7c0657d6bb8f4c2389d15dcd54377996":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ed40b1cc679a49e199ed2fb9c198ce65":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a64194c57b8b433b844f040f583e15a4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4f1bfa33051e42b1abb6cdf5a57dde35":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2c6a6ba29aa54ee598c7fbd8292ed9bf","IPY_MODEL_644deed8143544269f86f17507757a30","IPY_MODEL_5e63358c9c66401f84440925d88b3c49"],"layout":"IPY_MODEL_f33a9f4f5cf74ca4ac2551031af9a2ab"}},"2c6a6ba29aa54ee598c7fbd8292ed9bf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9c43b1d53c8b4e06a99aa490bbbad813","placeholder":"​","style":"IPY_MODEL_ab1050c1c0eb4a89a313ac09cf8150d0","value":"vocab.txt: 100%"}},"644deed8143544269f86f17507757a30":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5b0f13e4dab4419daa7cbb9ede4d1073","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_20b92b1fef224a0c8ab6150b0ab964f9","value":231508}},"5e63358c9c66401f84440925d88b3c49":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d6b45b9c8c11491cadc9b55314adfc70","placeholder":"​","style":"IPY_MODEL_62988319a166490e9578dcf517ab5d3d","value":" 232k/232k [00:00&lt;00:00, 3.52MB/s]"}},"f33a9f4f5cf74ca4ac2551031af9a2ab":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9c43b1d53c8b4e06a99aa490bbbad813":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ab1050c1c0eb4a89a313ac09cf8150d0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5b0f13e4dab4419daa7cbb9ede4d1073":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"20b92b1fef224a0c8ab6150b0ab964f9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d6b45b9c8c11491cadc9b55314adfc70":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"62988319a166490e9578dcf517ab5d3d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7154164ebc884a76986dd0bff1c0075a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0d0ad345e2e74838849f43a92f6fda6c","IPY_MODEL_af5e0e5b412e43f98c7c79e3f7b1baa7","IPY_MODEL_04dd37007f494028a4d3770758fd64c8"],"layout":"IPY_MODEL_1c454704f3314a07b889f950f38cfbf2"}},"0d0ad345e2e74838849f43a92f6fda6c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_609bc7692f7a4c9daa82e449fe79fe34","placeholder":"​","style":"IPY_MODEL_7099f32f57e245b79805f2311483e3a7","value":"tokenizer.json: 100%"}},"af5e0e5b412e43f98c7c79e3f7b1baa7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9407eee205cc49159706611b465a75fb","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_aef00c61a00440fd8a91f6245c5ad1db","value":466062}},"04dd37007f494028a4d3770758fd64c8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89647c080caa453299a8aa3d160196e0","placeholder":"​","style":"IPY_MODEL_e8c7b56e234646278a4ce4ff62c90713","value":" 466k/466k [00:00&lt;00:00, 4.52MB/s]"}},"1c454704f3314a07b889f950f38cfbf2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"609bc7692f7a4c9daa82e449fe79fe34":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7099f32f57e245b79805f2311483e3a7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9407eee205cc49159706611b465a75fb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aef00c61a00440fd8a91f6245c5ad1db":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"89647c080caa453299a8aa3d160196e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e8c7b56e234646278a4ce4ff62c90713":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3d07273f1de54748afe3fe2cb5ad59a5":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7abeca26edfe4d96b6a9f84615f23633","IPY_MODEL_c3aff16db382415a8fb10aa9c6992fbd","IPY_MODEL_358ec45fc57740479865310488a71444"],"layout":"IPY_MODEL_0b492254da2142ad839d5ed8546c8dcb"}},"7abeca26edfe4d96b6a9f84615f23633":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb5453fe3a794ba4ae6e43ca55f20743","placeholder":"​","style":"IPY_MODEL_86c692bbe2b446768771635b62d16887","value":"config.json: 100%"}},"c3aff16db382415a8fb10aa9c6992fbd":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9c660120db7b413fb1b618bed4df4fde","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6b9e3d1e9bda44e6b0c317232969fc92","value":570}},"358ec45fc57740479865310488a71444":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_eb9a7023029e4475b14ef279c30a24fc","placeholder":"​","style":"IPY_MODEL_7f68de7cedb14beeb94786ed2c7960ca","value":" 570/570 [00:00&lt;00:00, 43.6kB/s]"}},"0b492254da2142ad839d5ed8546c8dcb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cb5453fe3a794ba4ae6e43ca55f20743":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"86c692bbe2b446768771635b62d16887":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9c660120db7b413fb1b618bed4df4fde":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6b9e3d1e9bda44e6b0c317232969fc92":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"eb9a7023029e4475b14ef279c30a24fc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f68de7cedb14beeb94786ed2c7960ca":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dbb2078a4f71418aacd138e08ac2ee6f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_563c6af586764155a05c77c1d069621a","IPY_MODEL_b206a852365d48828680ae65b03a9834","IPY_MODEL_d219a0aa1cc94a6eb9a86c448a06f526"],"layout":"IPY_MODEL_ec9f82ecf9074b73b503c893a2b81d68"}},"563c6af586764155a05c77c1d069621a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_206f824342084871ba8192dd5d188ba9","placeholder":"​","style":"IPY_MODEL_d3eab802c2f04f21818bcd6807427512","value":"model.safetensors: 100%"}},"b206a852365d48828680ae65b03a9834":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_1d80c8799eda4abeb761b3d3d89264e2","max":440449768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e3035f57acea4fc8978961c8209e7ed9","value":440449768}},"d219a0aa1cc94a6eb9a86c448a06f526":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4bf0cd3c5de6419caad6745068262290","placeholder":"​","style":"IPY_MODEL_a1ff8494de8a4f189dd9391d9f15bd4d","value":" 440M/440M [00:03&lt;00:00, 134MB/s]"}},"ec9f82ecf9074b73b503c893a2b81d68":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"206f824342084871ba8192dd5d188ba9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d3eab802c2f04f21818bcd6807427512":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1d80c8799eda4abeb761b3d3d89264e2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e3035f57acea4fc8978961c8209e7ed9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4bf0cd3c5de6419caad6745068262290":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a1ff8494de8a4f189dd9391d9f15bd4d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}